{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Brand\\\\OneDrive\\\\Desktop\\\\react-projects\\\\hacker-rank\\\\src\\\\components\\\\HackerSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getSearchResult } from '../store/hackerResults/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction HackerSearch(props) {\n  _s();\n\n  const [term, setTerm] = useState('ransomware');\n  const [debounceTerm, setDebounceTerm] = useState(term);\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setDebounceTerm(term);\n    }, 1000);\n    return () => {\n      clearTimeout(timerId);\n    };\n  }, [term]);\n  useEffect(() => {\n    if (debounceTerm) {\n      props.getSearchResult(debounceTerm);\n    }\n  }, [debounceTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"HackerSearch\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HackerSearch, \"8inafWhcX/f1ltvkEnB6XCLNijI=\");\n\n_c = HackerSearch;\n\nconst mapStateToProps = state => {\n  return {\n    results: state.results\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getSearchResult\n})(HackerSearch);\n\nvar _c;\n\n$RefreshReg$(_c, \"HackerSearch\");","map":{"version":3,"sources":["C:/Users/Brand/OneDrive/Desktop/react-projects/hacker-rank/src/components/HackerSearch.js"],"names":["React","useState","useEffect","connect","getSearchResult","HackerSearch","props","term","setTerm","debounceTerm","setDebounceTerm","timerId","setTimeout","clearTimeout","mapStateToProps","state","results"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;;AAEA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,YAAD,CAAhC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAACM,IAAD,CAAhD;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BF,MAAAA,eAAe,CAACH,IAAD,CAAf;AACH,KAFyB,EAEvB,IAFuB,CAA1B;AAIA,WAAO,MAAM;AACTM,MAAAA,YAAY,CAACF,OAAD,CAAZ;AACH,KAFD;AAGH,GARQ,EAQN,CAACJ,IAAD,CARM,CAAT;AAUAL,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIO,YAAJ,EAAkB;AACdH,MAAAA,KAAK,CAACF,eAAN,CAAsBK,YAAtB;AACH;AAEJ,GANQ,EAMN,CAACA,YAAD,CANM,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAzBQJ,Y;;KAAAA,Y;;AA2BT,MAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHC,IAAAA,OAAO,EAAED,KAAK,CAACC;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAAEW,eAAF,EAAmB;AAAEV,EAAAA;AAAF,CAAnB,CAAP,CAA+CC,YAA/C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getSearchResult } from '../store/hackerResults/actions'\r\n\r\nfunction HackerSearch (props) {\r\n    const [term, setTerm] = useState('ransomware')\r\n    const [debounceTerm, setDebounceTerm] = useState(term)\r\n\r\n    useEffect(() => {\r\n        const timerId = setTimeout(() => {\r\n            setDebounceTerm(term)\r\n        }, 1000)\r\n\r\n        return () => {\r\n            clearTimeout(timerId)\r\n        }\r\n    }, [term])\r\n\r\n    useEffect(() => {\r\n\r\n        if (debounceTerm) {\r\n            props.getSearchResult(debounceTerm)\r\n        }\r\n\r\n    }, [debounceTerm])\r\n\r\n    return (\r\n        <div>HackerSearch</div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        results: state.results\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, { getSearchResult })(HackerSearch)"]},"metadata":{},"sourceType":"module"}